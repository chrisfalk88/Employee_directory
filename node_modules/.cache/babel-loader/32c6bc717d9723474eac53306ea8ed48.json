{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _defineProperty from\"/Users/i853254/Desktop/Repos/Homework/Homework19/Employee_directory/employeedirectory/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/i853254/Desktop/Repos/Homework/Homework19/Employee_directory/employeedirectory/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/i853254/Desktop/Repos/Homework/Homework19/Employee_directory/employeedirectory/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/i853254/Desktop/Repos/Homework/Homework19/Employee_directory/employeedirectory/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/i853254/Desktop/Repos/Homework/Homework19/Employee_directory/employeedirectory/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{Component}from\"react\";import Table from\"react-bootstrap/Table\";import Form from\"react-bootstrap/Form\";import API from\"./utils/API.js\";import Jumbo from\"./components/Jumbo.js\";import\"./App.css\";var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={search:\"\",ogEmployees:[],employees:[]};_this.handleInputChange=function(event){var _this$setState;// Getting the value and name of the input which triggered the change\nvar value=event.target.value;var name=event.target.name;var filteredPeople=_this.state.ogEmployees.filter(function(employee){return employee.name.first.toLowerCase().startsWith(value.toLowerCase())||employee.name.last.toLowerCase().startsWith(value.toLowerCase());});// Updating the input's state\n_this.setState((_this$setState={},_defineProperty(_this$setState,name,value),_defineProperty(_this$setState,\"employees\",filteredPeople),_this$setState));};_this.handleFormSubmit=function(event){event.preventDefault();};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;API.getUsers().then(function(res){console.log(res.data);_this2.setState({ogEmployees:res.data.results,employees:res.data.results});}).catch(function(err){return console.log(err);});}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Jumbo,{}),/*#__PURE__*/_jsx(Form,{onSubmit:this.handleFormSubmit,children:/*#__PURE__*/_jsxs(Form.Group,{controlId:\"formBasicEmail\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Search\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Search for a person\",onChange:this.handleInputChange,name:\"search\",value:this.state.search})]})}),/*#__PURE__*/_jsxs(Table,{striped:true,bordered:true,hover:true,size:\"sm\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"#\"}),/*#__PURE__*/_jsx(\"th\",{children:\"First Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Last Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Username\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:this.state.employees.map(function(employee,i){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:i+1}),/*#__PURE__*/_jsx(\"td\",{children:employee.name.first}),/*#__PURE__*/_jsx(\"td\",{children:employee.name.last}),/*#__PURE__*/_jsx(\"td\",{children:employee.login.username})]},i);})})]})]});}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/Users/i853254/Desktop/Repos/Homework/Homework19/Employee_directory/employeedirectory/src/App.js"],"names":["Component","Table","Form","API","Jumbo","App","state","search","ogEmployees","employees","handleInputChange","event","value","target","name","filteredPeople","filter","employee","first","toLowerCase","startsWith","last","setState","handleFormSubmit","preventDefault","getUsers","then","res","console","log","data","results","catch","err","map","i","login","username"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport Form from \"react-bootstrap/Form\";\nimport API from \"./utils/API.js\";\nimport Jumbo from \"./components/Jumbo.js\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    search: \"\",\n    ogEmployees: [],\n    employees: [],\n  };\n  componentDidMount() {\n    API.getUsers()\n      .then((res) => {\n        console.log(res.data);\n        this.setState({\n          ogEmployees: res.data.results,\n          employees: res.data.results,\n        });\n      })\n      .catch((err) => console.log(err));\n  }\n\n  handleInputChange = (event) => {\n    // Getting the value and name of the input which triggered the change\n    const value = event.target.value;\n    const name = event.target.name;\n\n    const filteredPeople = this.state.ogEmployees.filter(\n      (employee) =>\n        employee.name.first.toLowerCase().startsWith(value.toLowerCase()) ||\n        employee.name.last.toLowerCase().startsWith(value.toLowerCase())\n    );\n\n    // Updating the input's state\n    this.setState({\n      [name]: value,\n      employees: filteredPeople,\n    });\n  };\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Jumbo />\n        <Form onSubmit={this.handleFormSubmit}>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Search</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Search for a person\"\n              onChange={this.handleInputChange}\n              name=\"search\"\n              value={this.state.search}\n            />\n          </Form.Group>\n        </Form>\n        <Table striped bordered hover size=\"sm\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>First Name</th>\n              <th>Last Name</th>\n              <th>Username</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.employees.map((employee, i) => (\n              <tr key={i}>\n                <td>{i + 1}</td>\n                <td>{employee.name.first}</td>\n                <td>{employee.name.last}</td>\n                <td>{employee.login.username}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}